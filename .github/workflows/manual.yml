name: Manual workflow to search PDFs for string

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:      
      search_string:        
        description: 'String to search for in PDFs'      
        required: true        
        default: 'Ruben'
        type: string
        
      periodico_num:
        description: 'Periodico number to search for PDFs (leave empty to use auto-increment)'
        required: false
        type: string
        
      email_to:
        description: 'Email addresses to send results to (comma-separated)'
        required: true
        default: 'arriagar@gmail.com,breangelita@gmail.com'
        type: string

  schedule:
    # Run the workflow Monday through Friday at 9:00 AM CST
    - cron: '0 15 * * 1-5'

jobs:        
  search_pdfs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install requests PyPDF2 pycryptodome

      - name: Get last successful periodico number
        id: last_periodico
        if: ${{ github.event.inputs.periodico_num == '' }}
        run: |
          # Get the API response for the last successful run
          api_response=$(curl -H "Accept: application/vnd.github+json" \
                          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                          https://api.github.com/repos/${{ github.repository }}/actions/runs?status=success&event=workflow_dispatch)
          
          # Extract the last successful workflow run ID
          last_run_id=$(echo $api_response | jq -r '.workflow_runs[0].id')
          
          # Use the workflow run ID to get the input parameters
          run_details=$(curl -H "Accept: application/vnd.github+json" \
                         -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                         https://api.github.com/repos/${{ github.repository }}/actions/runs/$last_run_id)
          
          # Extract and increment the last successful periodico_num value
          last_run_periodico=$(echo $run_details | jq -r '.inputs.periodico_num')
          next_periodico=$((last_run_periodico + 1))
          echo "::set-output name=periodico_num::$next_periodico"                    

      - name: Set periodico number
        id: set_periodico
        run: |
          if [ -n "${{ github.event.inputs.periodico_num }}" ]; then
            echo "::set-output name=periodico_num::${{ github.event.inputs.periodico_num }}"
          else
            echo "::set-output name=periodico_num::${{ steps.last_periodico.outputs.periodico_num }}"
          fi

      - name: Run PDF search
        run: |
          python busca_texto_en_periodico.py "${{ github.event.inputs.search_string }}" "${{ steps.set_periodico.outputs.periodico_num }}"

      - name: Email search results
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{secrets.EMAIL_USER}}
          password: ${{secrets.EMAIL_PASS}}
          subject: PDF Search Results
          body: The search for "${{ github.event.inputs.search_string }}" in periodico ${{ steps.last_periodico.outputs.next_periodico }} is complete.
          to: ${{ github.event.inputs.email_to }}
          from: GitHub Actions
          content_type: text/plain
          attachments: |
            search_results.txt
